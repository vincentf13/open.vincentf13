apiVersion: v1
kind: ConfigMap
metadata:
  name: infra-kafka-config
  labels:
    app: infra-kafka
  # 提供啟動腳本，依節點序號產生 KRaft 設定檔。
data:
  start-kafka.sh: |-
    #!/bin/bash
    set -euo pipefail

    ORDINAL=${HOSTNAME##*-}
    NODE_ID=${ORDINAL}
    ADVERTISED_HOST="${HOSTNAME}.infra-kafka-headless"
    CONFIG_PATH="/opt/kafka/config/generated.properties"
    DATA_DIR="/var/lib/kafka/data"

    cat <<EOF_CONF | sed 's/^    //' >"${CONFIG_PATH}"
        process.roles=broker,controller
        node.id=${NODE_ID}
        controller.quorum.voters=${KAFKA_CONTROLLER_QUORUM_VOTERS}
        controller.listener.names=CONTROLLER
        listeners=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
        advertised.listeners=PLAINTEXT://${ADVERTISED_HOST}:9092
        listener.security.protocol.map=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
        inter.broker.listener.name=PLAINTEXT
        log.dirs=${DATA_DIR}
        offsets.topic.replication.factor=3
        transaction.state.log.replication.factor=3
        transaction.state.log.min.isr=2
        auto.create.topics.enable=true
        group.initial.rebalance.delay.ms=0
        num.network.threads=3
        num.io.threads=8
        socket.send.buffer.bytes=102400
        socket.receive.buffer.bytes=102400
        socket.request.max.bytes=104857600
    EOF_CONF

    mkdir -p "${DATA_DIR}"
    if [[ ! -f "${DATA_DIR}/meta.properties" ]]; then
      /opt/kafka/bin/kafka-storage.sh format --config "${CONFIG_PATH}" --cluster-id "${KAFKA_CLUSTER_ID}" --ignore-formatted
    fi

    exec /opt/kafka/bin/kafka-server-start.sh "${CONFIG_PATH}"
