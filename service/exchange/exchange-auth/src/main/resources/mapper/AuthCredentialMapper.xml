<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="open.vincentf13.exchange.auth.infra.persistence.mapper.AuthCredentialMapper">

    <insert id="insertSelective" parameterType="AuthCredentialPO"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO auth_credentials
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="credentialType != null">credential_type,</if>
            <if test="secretHash != null">secret_hash,</if>
            <if test="salt != null">salt,</if>
            <if test="status != null">status,</if>
            <if test="expiresAt != null">expires_at,</if>
            <if test="createdAt != null">created_at,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="credentialType != null">#{credentialType},</if>
            <if test="secretHash != null">#{secretHash},</if>
            <if test="salt != null">#{salt},</if>
            <if test="status != null">#{status},</if>
            <if test="expiresAt != null">#{expiresAt},</if>
            <if test="createdAt != null">#{createdAt},</if>
        </trim>
    </insert>

    <select id="findByPO" parameterType="AuthCredentialPO" resultType="AuthCredentialPO">
        SELECT id, user_id, credential_type, secret_hash, salt, status, expires_at, created_at
        FROM auth_credentials
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="userId != null">AND user_id = #{userId}</if>
            <if test="credentialType != null">AND credential_type = #{credentialType}</if>
            <if test="secretHash != null">AND secret_hash = #{secretHash}</if>
            <if test="salt != null">AND salt = #{salt}</if>
            <if test="status != null">AND status = #{status}</if>
            <if test="expiresAt != null">AND expires_at = #{expiresAt}</if>
            <if test="createdAt != null">AND created_at = #{createdAt}</if>
        </where>
        ORDER BY id DESC
    </select>

    <update id="updateSelective" parameterType="AuthCredentialPO">
        UPDATE auth_credentials
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="credentialType != null">credential_type = #{credentialType},</if>
            <if test="secretHash != null">secret_hash = #{secretHash},</if>
            <if test="salt != null">salt = #{salt},</if>
            <if test="status != null">status = #{status},</if>
            <if test="expiresAt != null">expires_at = #{expiresAt},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
        </set>
        WHERE id = #{id}
    </update>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO auth_credentials (user_id, credential_type, secret_hash, salt, status, expires_at, created_at)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.userId}, #{item.credentialType}, #{item.secretHash}, #{item.salt}, #{item.status}, #{item.expiresAt}, #{item.createdAt})
        </foreach>
    </insert>

    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            UPDATE auth_credentials
            <set>
                <if test="item.userId != null">user_id = #{item.userId},</if>
                <if test="item.credentialType != null">credential_type = #{item.credentialType},</if>
                <if test="item.secretHash != null">secret_hash = #{item.secretHash},</if>
                <if test="item.salt != null">salt = #{item.salt},</if>
                <if test="item.status != null">status = #{item.status},</if>
                <if test="item.expiresAt != null">expires_at = #{item.expiresAt},</if>
                <if test="item.createdAt != null">created_at = #{item.createdAt},</if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>

</mapper>
