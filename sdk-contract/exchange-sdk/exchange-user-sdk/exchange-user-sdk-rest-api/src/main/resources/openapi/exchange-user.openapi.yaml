openapi: 3.0.3
info:
  title: Exchange User Service API
  version: 1.0.0
  description: API contract for the exchange user service.
servers:
  - url: http://localhost:8080
paths:
  /api/users:
    post:
      summary: Register user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnvelope'
  /api/users/me:
    get:
      summary: Get current user profile
      operationId: getCurrentUser
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnvelope'
  /api/users/{id}:
    get:
      summary: Find user by id
      operationId: findUserById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnvelope'
  /api/users/by-email:
    get:
      summary: Find user by email
      operationId: findUserByEmail
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnvelope'
components:
  schemas:
    UserRegisterRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
          maxLength: 128
        externalId:
          type: string
          maxLength: 64
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalId:
          type: string
        email:
          type: string
        status:
          $ref: '#/components/schemas/UserStatus'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UserStatus:
      type: string
      enum: [ACTIVE, LOCKED, DISABLED]
    OpenApiResponse:
      type: object
      properties:
        success:
          type: boolean
        code:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
    UserEnvelope:
      allOf:
        - $ref: '#/components/schemas/OpenApiResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/UserResponse'
